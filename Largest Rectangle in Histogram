class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        int N=heights.size();
        stack<int>st;
        int leftSmall[N];
        int rightSmall[N];
        int Area=0;
        for(int i=0;i<N;i++)
        {
            while(!st.empty() && heights[st.top()]>=heights[i])
            {
                st.pop();
            }
            if(st.empty())
            {
                leftSmall[i]=0;
            }
            else
            {
                leftSmall[i]=st.top()+1;
            }
             st.push(i);
        }
        while(!st.empty())
        {
            st.pop();
        }
        for(int i=N-1;i>=0;i--)
        {
            while(!st.empty() && heights[st.top()]>=heights[i] )
            {
                st.pop();
            }
            if(st.empty())
            {
                rightSmall[i]=N-1;
            }
            else
            {
                rightSmall[i]=st.top()-1;
            }
            st.push(i);
        }
        int maxArea=0;
        for(int i=0;i<N;i++)
        {
            maxArea=max(maxArea, heights[i]*(rightSmall[i]-leftSmall[i]+1));
        }
        return maxArea;
    }
};
